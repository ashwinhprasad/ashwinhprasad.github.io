---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const allPages = await getCollection('pages');
const allGroups = await getCollection('groups');

// Sort pages by creation date (newest first)
const recentPages = [...allPages].sort(
  (a, b) => new Date(b.data.created).getTime() - new Date(a.data.created).getTime()
).slice(0, 6);

// Random selection for "Explore a random page"
const randomPage = allPages[Math.floor(Math.random() * allPages.length)];
---

<BaseLayout title="Ashwin's Zettelkasten" description="A personal knowledge management system">
  <section class="hero">
    <div class="hero-content">
      <h1>Hi, I'm Ashwin Prasad H</h1>
      <p class="subtitle">and this is my Zettelkasten</p>
      
      <div class="hero-actions">
        <a href={`/pages/${randomPage.slug}`} class="button primary">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M7 17l9.2-9.2M17 17V7H7"></path>
          </svg>
          Explore a random page
        </a>
      </div>
    </div>
  </section>

  <section class="sections-grid">
    <div class="section-title">
      <h2>Knowledge Groups</h2>
      <a href="/groups" class="view-all">View all groups</a>
    </div>
    
    <div class="groups-grid">
      {allGroups.slice(0, 6).map((group) => (
        <a href={`/groups/${group.slug}`} class="group-card">
          <div class="group-card-color" style={`background: linear-gradient(135deg, ${group.data.color || '#3b82f6'}, ${group.data.color || '#3b82f6'}80)`}></div>
          <div class="group-card-content">
            <div class="group-card-icon" style={`color: ${group.data.color || '#3b82f6'}`}>
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>
              </svg>
            </div>
            <h3 class="group-card-title">{group.data.title}</h3>
            <p class="group-card-description">{group.data.description}</p>
          </div>
        </a>
      ))}
    </div>
  </section>

  <section class="sections-grid">
    <div class="section-title">
      <h2>Recent Notes</h2>
      <a href="/pages" class="view-all">View all pages</a>
    </div>
    
    <div class="recent-pages">
      {recentPages.map((page) => (
        <a href={`/pages/${page.slug}`} class="page-card">
          <div class="page-card-content">
            <h3 class="page-card-title">{page.data.title}</h3>
            <p class="page-card-description">{page.data.description}</p>
            <div class="page-card-meta">
              <time class="page-card-date">
                {page.data.created.toLocaleDateString('en-US', { 
                  year: 'numeric', 
                  month: 'short', 
                  day: 'numeric' 
                })}
              </time>
              {page.data.belongsTo.type === "groups" && page.data.belongsTo.groups.length > 0 && (
                <div class="page-card-groups">
                  {page.data.belongsTo.groups.slice(0, 2).map((groupSlug) => {
                    const group = allGroups.find(g => g.slug === groupSlug);
                    return group && (
                      <span
                        class="page-card-group"
                        style={`background-color: ${group.data.color || '#3b82f6'}22; color: ${group.data.color || '#3b82f6'};`}
                      >
                        {group.data.title}
                      </span>
                    );
                  })}
                </div>
              )}
            </div>
          </div>
        </a>
      ))}
    </div>
  </section>
</BaseLayout>

<style>
  .hero {
    margin: -2rem -1rem 2rem;
    padding: 4rem 2rem;
    position: relative;
    background: var(--bg-secondary);
    border-bottom: 1px solid var(--border-primary);
    overflow: hidden;
  }

  .hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 20% 40%, rgba(59, 130, 246, 0.15) 0%, transparent 30%),
      radial-gradient(circle at 80% 20%, rgba(6, 182, 212, 0.1) 0%, transparent 30%);
    pointer-events: none;
  }

  .hero-content {
    max-width: 900px;
    margin: 0 auto;
    position: relative;
    z-index: 2;
    text-align: center;
  }

  .hero h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
    background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    line-height: 1.2;
  }

  .subtitle {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    color: var(--text-secondary);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .hero-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
  }

  .button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-weight: 500;
    font-size: 1rem;
    transition: all var(--transition-fast);
    border: none;
    cursor: pointer;
  }

  .button.primary {
    background-color: var(--accent-primary);
    color: white;
  }

  .button.primary:hover {
    background-color: var(--accent-secondary);
    transform: translateY(-2px);
  }

  .button svg {
    transition: transform var(--transition-fast);
  }
  
  .button:hover svg {
    transform: translateX(3px);
  }

  .sections-grid {
    margin-bottom: 3rem;
  }

  .section-title {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .section-title h2 {
    font-size: 1.75rem;
    margin: 0;
  }

  .view-all {
    font-size: 0.9rem;
    font-weight: 500;
    color: var(--text-secondary);
    text-decoration: none;
    padding: 0.35rem 0.75rem;
    border-radius: 6px;
    transition: all var(--transition-fast);
  }

  .view-all:hover {
    background-color: var(--bg-hover);
    color: var(--text-primary);
  }

  /* Groups Grid */
  .groups-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .group-card {
    display: block;
    text-decoration: none;
    border-radius: 12px;
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    overflow: hidden;
    transition: all var(--transition-medium);
    height: 100%;
  }

  .group-card:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-md);
    border-color: var(--border-secondary);
  }

  .group-card-color {
    height: 6px;
    width: 100%;
  }

  .group-card-content {
    padding: 1.5rem;
    position: relative;
  }

  .group-card-icon {
    position: absolute;
    top: -12px;
    right: 1.5rem;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--bg-tertiary);
    border: 1px solid var(--border-primary);
  }

  .group-card-title {
    font-size: 1.2rem;
    font-weight: 600;
    margin: 0 0 0.5rem;
    color: var(--text-primary);
  }

  .group-card-description {
    font-size: 0.95rem;
    color: var(--text-secondary);
    margin: 0;
    line-height: 1.5;
  }

  /* Recent Pages */
  .recent-pages {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .page-card {
    display: block;
    text-decoration: none;
    border-radius: 12px;
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    transition: all var(--transition-medium);
    height: 100%;
  }

  .page-card:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-md);
    border-color: var(--border-secondary);
  }

  .page-card-content {
    padding: 1.5rem;
  }

  .page-card-title {
    font-size: 1.2rem;
    font-weight: 600;
    margin: 0 0 0.5rem;
    color: var(--text-primary);
  }

  .page-card-description {
    font-size: 0.95rem;
    color: var(--text-secondary);
    margin: 0 0 1rem;
    line-height: 1.5;
  }

  .page-card-meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 0.85rem;
  }

  .page-card-date {
    color: var(--text-muted);
    font-family: var(--font-mono);
  }

  .page-card-groups {
    display: flex;
    gap: 0.5rem;
  }

  .page-card-group {
    font-size: 0.75rem;
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-weight: 500;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .hero {
      padding: 3rem 1rem;
    }
    
    .hero h1 {
      font-size: 2.25rem;
    }
    
    .subtitle {
      font-size: 1rem;
    }
    
    .groups-grid,
    .recent-pages {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    }
  }
</style>
