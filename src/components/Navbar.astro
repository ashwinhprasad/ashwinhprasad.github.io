---
import Search from "astro-pagefind/components/Search";

const searchOptions = { showImages: false };
---

<nav class="navbar">
  <div class="navbar-content">
    <div class="left">
      <a href="/" class="logo">
        <span class="logo-icon">â—ˆ</span>
        <span class="logo-text">Home</span>
      </a>
    </div>
    <div class="right">
      <div class="search-container">
        <Search id="navSearchBar" className="search-bar" uiOptions={searchOptions} />
        <div class="search-icon">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.35-4.35"></path>
          </svg>
        </div>
      </div>
      <a href="/about" class="nav-link">About</a>
    </div>
  </div>
</nav>

<div id="searchOverlay" class="search-overlay">
  <div class="search-modal">
    <div class="search-modal-content">
      <div class="search-header">
        <h3>Search Knowledge Base</h3>
        <button class="close-btn" id="closeSearchBtn">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      </div>
      <Search id="overlaySearchBar" className="overlay-search-bar" uiOptions={searchOptions} />
    </div>
  </div>
</div>

<style>
  .navbar {
    position: sticky;
    top: 0;
    z-index: 100;
    background: rgba(10, 10, 11, 0.9);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid var(--border-primary);
    transition: all var(--transition-medium);
  }

  .navbar-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0.75rem 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .left {
    flex: 1;
  }

  .logo {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    text-decoration: none;
    color: var(--text-primary);
    font-weight: 600;
    font-size: 1.1rem;
    transition: color var(--transition-fast);
  }

  .logo:hover {
    color: var(--accent-primary);
  }

  .logo-icon {
    font-size: 1.5rem;
    color: var(--accent-primary);
    font-weight: 400;
  }

  .logo-text {
    font-family: var(--font-mono);
    font-size: 0.95rem;
    letter-spacing: -0.02em;
  }

  .right {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    flex: 1;
    justify-content: flex-end;
  }

  .search-container {
    position: relative;
    max-width: 300px;
    flex: 1;
  }

  .search-icon {
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-muted);
    pointer-events: none;
  }

  .nav-link {
    color: var(--text-secondary);
    text-decoration: none;
    font-weight: 500;
    font-size: 0.9rem;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    transition: all var(--transition-fast);
    font-family: var(--font-mono);
    letter-spacing: 0.02em;
  }

  .nav-link:hover {
    color: var(--text-primary);
    background-color: var(--bg-hover);
  }

  /* Search Input Styling */
  :global(.search-bar) {
    width: 100%;
  }
  
  :global(.search-bar input) {
    width: 100%;
    padding: 0.6rem 2.5rem 0.6rem 1rem;
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: 8px;
    color: var(--text-primary);
    font-size: 0.9rem;
    font-family: var(--font-sans);
    transition: all var(--transition-fast);
    cursor: pointer;
  }
  
  :global(.search-bar input::placeholder) {
    color: var(--text-muted);
  }
  
  :global(.search-bar input:focus) {
    outline: none;
    border-color: var(--accent-primary);
    background: var(--bg-tertiary);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  :global(.search-bar input:hover) {
    border-color: var(--border-secondary);
  }

  /* Search Overlay */
  .search-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(10px);
    display: none;
    justify-content: center;
    align-items: flex-start;
    z-index: 1000;
    padding-top: 10vh;
  }

  .search-modal {
    width: 100%;
    max-width: 700px;
    margin: 0 1rem;
  }

  .search-modal-content {
    background: var(--bg-elevated);
    border: 1px solid var(--border-secondary);
    border-radius: 12px;
    box-shadow: var(--shadow-xl);
    overflow: hidden;
  }

  .search-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 1.5rem 1rem;
    border-bottom: 1px solid var(--border-primary);
  }

  .search-header h3 {
    margin: 0;
    color: var(--text-primary);
    font-size: 1.1rem;
    font-weight: 600;
  }

  .close-btn {
    background: none;
    border: none;
    color: var(--text-muted);
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 6px;
    transition: all var(--transition-fast);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .close-btn:hover {
    color: var(--text-primary);
    background: var(--bg-hover);
  }
  
  /* Overlay Search Bar */
  :global(.overlay-search-bar) {
    width: 100%;
    padding: 1.5rem;
  }
  
  :global(.overlay-search-bar input) {
    width: 100%;
    padding: 1rem 1.25rem;
    background: var(--bg-secondary);
    border: 2px solid var(--border-primary);
    border-radius: 10px;
    color: var(--text-primary);
    font-size: 1.1rem;
    font-family: var(--font-sans);
    transition: all var(--transition-fast);
  }
  
  :global(.overlay-search-bar input::placeholder) {
    color: var(--text-muted);
  }
  
  :global(.overlay-search-bar input:focus) {
    outline: none;
    border-color: var(--accent-primary);
    background: var(--bg-tertiary);
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1);
  }
  
  /* Search Results */
  :global(.overlay-search-bar .pagefind-ui__results) {
    margin-top: 0;
    max-height: 50vh;
    overflow-y: auto;
    padding: 0 1.5rem 1.5rem;
  }

  :global(.pagefind-ui__result) {
    background: var(--bg-secondary) !important;
    border: 1px solid var(--border-primary) !important;
    border-radius: 8px !important;
    margin-bottom: 0.75rem !important;
    padding: 1rem !important;
    transition: all var(--transition-fast) !important;
  }

  :global(.pagefind-ui__result:hover) {
    border-color: var(--border-secondary) !important;
    transform: translateY(-1px);
  }

  :global(.pagefind-ui__result-title) {
    color: var(--text-primary) !important;
    font-weight: 600 !important;
    margin-bottom: 0.5rem !important;
  }

  :global(.pagefind-ui__result-excerpt) {
    color: var(--text-secondary) !important;
    line-height: 1.5 !important;
  }

  .search-overlay.active {
    display: flex;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .navbar-content {
      padding: 0.75rem 1rem;
    }
    
    .logo-text {
      display: none;
    }
    
    .right {
      gap: 1rem;
    }
    
    .search-container {
      max-width: 200px;
    }

    .search-modal {
      margin: 0 0.5rem;
    }

    .search-header {
      padding: 1rem;
    }

    :global(.overlay-search-bar) {
      padding: 1rem;
    }
  }
</style>

<script>
  function initSearchOverlay() {
    const navSearchInput = document.querySelector('#navSearchBar input') as HTMLInputElement;
    const searchOverlay = document.getElementById('searchOverlay');
    const closeBtn = document.getElementById('closeSearchBtn');
    
    function openSearch() {
      if (searchOverlay) {
        searchOverlay.classList.add('active');
        document.body.style.overflow = 'hidden';
        
        const overlaySearchInput = document.querySelector('#overlaySearchBar input') as HTMLInputElement;
        if (overlaySearchInput) {
          setTimeout(() => {
            overlaySearchInput.focus();
          }, 100);
        }
      }
    }

    function closeSearch() {
      if (searchOverlay) {
        searchOverlay.classList.remove('active');
        document.body.style.overflow = '';
      }
    }
    
    // Open search when clicking navbar search input
    navSearchInput?.addEventListener('click', (event) => {
      event.preventDefault();
      openSearch();
    });
    
    // Close search with close button
    closeBtn?.addEventListener('click', closeSearch);
    
    // Close search with Escape key
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && searchOverlay?.classList.contains('active')) {
        closeSearch();
      }
    });
    
    // Close search when clicking overlay background
    searchOverlay?.addEventListener('click', (event) => {
      if (event.target === searchOverlay) {
        closeSearch();
      }
    });
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initSearchOverlay);
  
  // Also initialize for Astro page transitions
  document.addEventListener('astro:page-load', initSearchOverlay);
</script>