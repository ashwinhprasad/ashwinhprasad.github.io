---
import Search from "astro-pagefind/components/Search";
---

<nav class="navbar">
  <div class="left">
    <a href="/">Home</a>
  </div>
  </div>
  <div class="right">
    <div class="search-container">
        <Search id="navSearchBar" className="search-bar" uiOptions={{ showImages: false }} />
    </div>
    <a href="/about">About Me</a>
  </div>
</nav>

<div id="searchOverlay" class="search-overlay">
  <div class="search-modal">
    <div class="search-modal-content">
      <Search id="overlaySearchBar" className="overlay-search-bar" uiOptions={{ showImages: false }} />
    </div>
  </div>
</div>
<style>
  .navbar {
    top: 0;
    left: 0;
    /* width: 100vw; */
    padding: 0.75rem 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: white;
    border-bottom: 1px solid #ddd;
    font-family: system-ui, -apple-system, sans-serif;
    position: sticky;
    z-index: 100;
  }

  .left, .right {
    flex: 1;
  }

  .center {
    flex: 2;
    display: flex;
    justify-content: center;
    max-width: 400px;
    margin: 0 1rem;
  }

  .right {
    display: flex;
    justify-content: space-evenly;
  }

  .navbar a {
    text-decoration: none;
    color: #1a1a1a;
    font-weight: 500;
    transition: color 0.2s;
  }

  .navbar a:hover {
    color: #6366f1;
  }

  .search-container {
    display: flex;
    gap: 0.5rem;
    width: 100%;
    max-width: 350px;
  }

  /* .search-bar {
    flex: 1;
    padding: 0.5rem 0.75rem;
    border: 1px solid #e5e5e5;
    border-radius: 6px;
    font-size: 0.9rem;
    transition: border-color 0.2s;
    background: #f9f9f9;
  }

  .search-bar:focus {
    outline: none;
    border-color: #6366f1;
    background: white;
  } */


  @media (max-width: 768px) {
    .navbar {
      flex-wrap: wrap;
      padding: 0.5rem;
    }
    
    .left, .right {
      flex: auto;
    }
    
    .center {
      flex: 100%;
      order: 3;
      margin: 0.75rem 0 0 0;
      max-width: none;
    }
    
    .search-container {
      max-width: none;
    }
  }

  /* Search styles */
  .search-bar {
    width: 100%;
    cursor: pointer;
  }
  
  /* Make the actual input in the Search component clickable and styled */
  :global(.search-bar input) {
    width: 100%;
    padding: 0.5rem 0.75rem;
    border: 1px solid #e5e5e5;
    border-radius: 6px;
    font-size: 0.9rem;
    transition: border-color 0.2s;
    background: #f9f9f9;
    cursor: pointer;
  }
  
  :global(.search-bar input:focus) {
    outline: none;
    border-color: #6366f1;
    background: white;
  }

  .search-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
    display: none;
    justify-content: center;
    align-items: flex-start;
    z-index: 1000;
  }

  .search-modal {
    width: 100%;
    max-width: 600px;
    margin-top: 100px;
  }

  .search-modal-content {
    background: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  /* Style the overlay search bar */
  :global(.overlay-search-bar) {
    width: 100%;
  }
  
  :global(.overlay-search-bar input) {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 2px solid #e5e5e5;
    border-radius: 8px;
    font-size: 1.1rem;
    transition: all 0.2s;
  }
  
  :global(.overlay-search-bar input:focus) {
    outline: none;
    border-color: #6366f1;
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
  }
  
  /* Style the search results in the overlay */
  :global(.overlay-search-bar .pagefind-ui__results) {
    margin-top: 1rem;
    max-height: 60vh;
    overflow-y: auto;
  }

  .search-overlay.active {
    display: flex;
  }
</style>

<script>
  // Wait for the DOM to be fully loaded
  document.addEventListener('DOMContentLoaded', () => {
    const navSearchInput = document.querySelector('#navSearchBar input') as HTMLInputElement;
    const searchOverlay = document.getElementById('searchOverlay');
    
    // Open the search overlay when clicking the search input in navbar
    navSearchInput?.addEventListener('click', (event) => {
      event.preventDefault();
      if (searchOverlay) {
        searchOverlay.classList.add('active');
        // Focus the search input in the overlay
        const overlaySearchInput = document.querySelector('#overlaySearchBar input') as HTMLInputElement;
        if (overlaySearchInput) {
          setTimeout(() => {
            overlaySearchInput.focus();
          }, 100);
        }
      }
    });
    
    // Close the overlay when pressing Escape key
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && searchOverlay?.classList.contains('active')) {
        searchOverlay.classList.remove('active');
      }
    });
    
    // Close overlay when clicking outside the modal
    searchOverlay?.addEventListener('click', (event) => {
      if (event.target === searchOverlay) {
        searchOverlay.classList.remove('active');
      }
    });
  });
</script>